local wind_ui = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local players, rs = game:GetService("Players"), game:GetService("ReplicatedStorage")
local lp = players.LocalPlayer
local get_farm = require(rs.Modules.GetFarm)
local inv = require(rs.Modules.InventoryService)
local net = rs:WaitForChild("ByteNetReliable")
local buffer = buffer.fromstring("\1\1\0\1")
local plant_traits_data = require(rs.Modules.PlantTraitsData)
local farm = get_farm(lp)
local run, hidenotif = false, false
local method, collecting, target, delay = 1, false, 0, 0.05
local blacklist, fruit = {}, {}

for name in pairs(plant_traits_data.Summer) do
	table.insert(fruit, name)
end

local function isBlacklisted(name)
	for _, b in ipairs(blacklist) do
		if name == b then return true end
	end
end

local function collect()
	if collecting then return end
	collecting = true
	task.spawn(function()
		for _, p in ipairs(farm.Important.Plants_Physical:GetChildren()) do
			if not run then break end
			if isBlacklisted(p.Name) then continue end
			for _, f in ipairs(fruit) do
				if p.Name:find(f, 1, true) then
					net:FireServer(buffer, { p })
					local f2 = p:FindFirstChild("Fruits", true)
					if f2 then
						for _, i in ipairs(f2:GetChildren()) do
							if not run then break end
							if method == 1 then
								if inv:IsMaxInventory(lp.Backpack) then
									rs.GameEvents.SummerHarvestRemoteEvent:FireServer("SubmitAllPlants")
									task.wait()
									break
								else
									net:FireServer(buffer, { i })
								end
							else
								net:FireServer(buffer, { i })
								rs.GameEvents.SummerHarvestRemoteEvent:FireServer("SubmitAllPlants")
							end
						end
					end
					break
				end
			end
			task.wait(.075)
		end
		collecting = false
	end)
end

local ui = wind_ui:CreateWindow({
	Title = "Summer Harvest",
	Icon = "rbxassetid://129260712070622",
	IconThemed = true,
	Author = "another21",
	Folder = "nah",
	Size = UDim2.fromOffset(580, 460),
	Transparent = true,
	Theme = "Dark",
	HideSearchBar = true,
	User = {Enabled = true},
	SideBarWidth = 200,
	ScrollBarEnabled = true,
})

local tab = ui:Section({ Title = "Menu", Opened = true }):Tab({ Title = "Main", Icon = "home" })

tab:Toggle({
	Title = "Auto Summer Event",
	Value = false,
	Callback = function(v) run = v end
})

tab:Dropdown({
	Title = "Submit Method:",
	Values = { "When Backpack Full", "After Harvest" },
	Value = "When Backpack Full",
	Callback = function(v) method = v:find("Backpack") and 1 or 2 end
})

tab:Dropdown({
	Title = "Blacklist Fruit",
	Values = fruit,
	Value = {},
	Multi = true,
	AllowNone = true,
	Callback = function(v) blacklist = v end
})

tab:Input({
	Title = "Target Points:",
	Desc = "Enter Summer Points target",
	Value = 0,
	Type = "Input",
	Placeholder = "Number only.",
	Callback = function(v) if tonumber(v) then target = tonumber(v) end end
})

tab:Toggle({
	Title = "Hide Notification",
	Value = false,
	Callback = function(v)
		hidenotif = v
		local g = lp:FindFirstChild("PlayerGui")
		if g and g:FindFirstChild("Top_Notification") then
			g.Top_Notification.Enabled = not v
		end
	end
})

tab:Divider()
local point = tab:Paragraph({ Title = "Points:", Desc = "" })
local time = tab:Paragraph({ Title = "Timer:", Desc = "" })

task.spawn(function()
	local points = 0
	while true do
		if hidenotif then
			local gui = lp:FindFirstChild("PlayerGui")
			local notif = gui and gui:FindFirstChild("Top_Notification")
			if notif then
				for _, f in ipairs(notif.Frame:GetChildren()) do
					if f:IsA("Frame") and f:FindFirstChildWhichIsA("TextLabel") then
						f:Destroy()
					end
				end
			end
		end

		local active = workspace:GetAttribute("SummerHarvest") == true

		for _, o in ipairs(workspace.SummerHarvestEvent.RewardSign:GetDescendants()) do
			if o:IsA("TextLabel") and o.Name == "PointTextLabel" then
				point:SetDesc(o.Text:match("%d+") or "0")
				points = tonumber(o.Text:match("%d+")) or 0
				break
			end
		end

		for _, o in ipairs(workspace.SummerHarvestEvent.RewardSign:GetDescendants()) do
			if o:IsA("TextLabel") and o.Name == "RewardTextLabel" then
				point:SetTitle(o.Text)
				break
			end
		end

		local s = workspace.SummerHarvestEvent.Sign:GetChildren()[4]
		if s and s:FindFirstChild("BillboardGui") then
			time:SetTitle(s.BillboardGui.TextLabel.Text)
			time:SetDesc(s.BillboardGui.Timer.Text)
		end

		if run then
			if not active then
				run = false
			elseif target ~= 0 and points >= target then
				run = false
			else
				collect()
			end
		end

		task.wait()
	end
end)
